[
  {
    "objectID": "AfstandeMellemStrenge.html",
    "href": "AfstandeMellemStrenge.html",
    "title": "Metrikker og afstand",
    "section": "",
    "text": "Et ord er en følge eller en streng af bogstaver eller tal hnaikgoh (nej, det behøver ikke give mening). Det kunne være en DNA-sekvens, et ord i en tekst eller noget helt andet 1 Længden af en streng er antallet af bogstaver. Edit-afstande er basalt set, hvor mange ændringer, man skal lave, for at komme fra den ene streng til den anden. Det afhænger naturligvis af, hvilke typer ændringer, man tillader.\n\nHammingafstanden mellem to lige lange strenge er Antallet af pladser, hvor de to strenge er forskellige. Afstand fra sne til sno er \\(1\\). Afstand fra sne til neg er \\(3\\). Det svarer til, at man må ændre et bogstav ad gangen. sne \\(\\rightarrow\\) nne \\(\\rightarrow\\) nee \\(\\rightarrow\\) neg.\nLevenshteinafstanden har flere tilladte ændringer: Man må ændre bogstaver, som i Hamming, men man må også indsætte og fjerne bogstaver. Levenshteinfstanden er det mindste antal sådanne ændringer, man skal lave for at nå fra det ene ord til det andet. Ordene/strengene behøver ikke have samme længde - man kan jo indsætte og fjerne bogstaver.\n\nAfstand fra sne til sno er \\(1\\), ligesom Hammingafstanden.\nAfstand fra sne til sned er også \\(1\\) - og her er Hammingafstanden slet ikke meningsfuld. Den er ikke defineret.\nAfstand fra sne til neg er \\(2\\) - via disse ændringer: sne \\(\\rightarrow\\) ne\\(\\rightarrow\\) neg. Hammingafstanden er 3.\n\nJo flere tilladte ændringer, jo kortere afstand. Der er algoritmer, der finder denne mindste vej mellem to ord - det er ikke helt så klart, hvordan man regner den ud, som for Hammingafstanden. Bemærk, at vi kunne have valgt sne \\(\\rightarrow\\) sneg\\(\\rightarrow\\) neg, som også har to \"moves\".\nDamerau-Levenshteinafstanden er som Levenshtein, men man tillader nu også ombytning af to bogstaver, som står ved siden af hinanden. Hvis man skriver teskt på en telefon eller pc, er det let at bytte om på den måde. Hvis man så har en liste over ord, der giver mening, kan man opdage, at teskt ikke giver mening, men at ordet tekst ligger meget tæt på - afstand 1 i dette afstandsmål - afstand 2 i Hamming eller Levenshtein. Ordet teske har også Hammingafstand 1 til teskt, så man kan ikke være sikker på, hvad det oprindelige var.\n\nFIGUR: Graf med ord i hver knude og kanter svarende til edit moves. Måske interaktivt, så man kan se, at kanter forsvinder, hvis man går fra Levenshtein til Hamming. Afstand mellem DNA-strenge kan man se på med edit-afstande. Så det er bestemt ikke kun ord i sædvanlig forstand.\nAfstande mellem navne: Navne som Peter, Pieter, Pietro, Petrus, Peder, Per, Pelle, Pekka, Peer, Petur, Pedro, Pierre, Pjotr, Pyotr, Petar eller måske Katarina, Katharina, Katrina, Katrine, Katrin, Cathryn, Kathryn, Catherine har samme oprindelse. Der er stor forskel på, hvor hyppigt, de optræder i forskellige lande. Overvej, om metrikkerne ovenfor kan bruges til at afsløre, hvor tæt på hinanden lande med Peter som hyppigst, er på lande med Pyotr."
  },
  {
    "objectID": "AfstandeMellemStrenge.html#footnotes",
    "href": "AfstandeMellemStrenge.html#footnotes",
    "title": "Metrikker og afstand",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nOfte gør man det desuden binært, så det er en streng af \\(0\\) og \\(1\\) såsom \\(00110110\\) Det er fornuftigt nok, eftersom computere opererer med den slags strenge.↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Metrikker og afstand",
    "section": "",
    "text": "Metrikker og afstand\n\nAfstand\nAfstand udfra data\nAfstande mellem DNA\nAfstande mellem punkter i planen\nAfstande mellem Strenge\nMetrik - Det abstrakte afstandsbegreb"
  },
  {
    "objectID": "AfstandeMellemPunkteriPlanen.html",
    "href": "AfstandeMellemPunkteriPlanen.html",
    "title": "Afstande mellem punkter i planen",
    "section": "",
    "text": "For at blive lidt mere præcis forestiller vi os, at vi har to punkter i planen, som vi kalder for \\(P(x_1,y_1)\\) og \\(Q(x_2,y_2)\\)."
  },
  {
    "objectID": "AfstandeMellemPunkteriPlanen.html#euklidisk-afstand",
    "href": "AfstandeMellemPunkteriPlanen.html#euklidisk-afstand",
    "title": "Afstande mellem punkter i planen",
    "section": "Euklidisk afstand",
    "text": "Euklidisk afstand\nDen euklidisk afstand mellem \\(P\\) og \\(Q\\) er \\[\\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}\\] Det er det, vi kender mest – og som formentlig er den afstand, du lige har tænkt på. Formlen ovenfor fremkommer ved at bruge Pythagoras.\nI app’en herunder er den euklidiske afstand illustreret. Du kan flytte rundt på punkterne og se, hvordan afstanden ændrer sig."
  },
  {
    "objectID": "AfstandeMellemPunkteriPlanen.html#manhattanafstanden",
    "href": "AfstandeMellemPunkteriPlanen.html#manhattanafstanden",
    "title": "Afstande mellem punkter i planen",
    "section": "Manhattanafstanden",
    "text": "Manhattanafstanden\nManhattanafstanden er den afstand, man får, når man er tvunget til at bevæge sig langs akserne, som vi kender det fra vejene i mange amerikanske byer, herunder på Manhattan. Den kaldes også taxi-afstanden. Formlen for at bestemme Manhattanafstanden er: \\[|x_2-x_1|+|y_2-y_1|\\] I app’en herunder er Manhattanafstanden illustreret. Du kan flytte rundt på punkterne og se, hvordan afstanden ændrer sig."
  },
  {
    "objectID": "AfstandeMellemPunkteriPlanen.html#max-afstanden",
    "href": "AfstandeMellemPunkteriPlanen.html#max-afstanden",
    "title": "Afstande mellem punkter i planen",
    "section": "Max-afstanden",
    "text": "Max-afstanden\nMax-afstanden er maksimum mellem den vandret og lodrette afstand mellem \\(P\\) og \\(Q\\). Det vil sige, maksimum af \\(|x_2-x_1|\\) og \\(|y_2-y_1|\\).\nDen kaldes også skak-konge afstanden. Kongen i skak kan gå diagonalt eller langs de to akser. Et diagonalt move fra \\((a,b)\\) til \\((a+k,b+k)\\) tænkes at have længde \\(k\\) – som i skak. Skal man fra eksempelvis \\(A(1,4)\\) til \\(B(3,7)\\) kan skakkongen gå fra \\(A(1,4)\\) til \\(C(3,6)\\) – det stykke har længde \\(2\\) og derefter fra \\(C(3,6)\\) til \\(B(3,7)\\) langs \\(y\\)-aksen - et stykke på længde \\(1\\). Samlet afstand er \\(3\\), maksimum af \\(|3-1|\\) og \\(|7-4|\\). Idéen er illustreret i figur 1.\n\n\n\nFigur 1: Kongen i skak skal fra \\(A\\) til \\(B\\) via \\(C\\).\n\n\nI app’en herunder er max-afstanden illustreret. Du kan flytte rundt på punkterne og se, hvordan afstanden ændrer sig."
  },
  {
    "objectID": "AfstandeMellemPunkteriPlanen.html#posthusafstanden",
    "href": "AfstandeMellemPunkteriPlanen.html#posthusafstanden",
    "title": "Afstande mellem punkter i planen",
    "section": "Posthusafstanden",
    "text": "Posthusafstanden\nPosthusafstanden1 mellem \\(P\\) og \\(Q\\) finder man, ved at tænke på, at der ligger et posthus i origo \\(O(0,0)\\), og vi skal sende et brev fra \\(P\\) til \\(Q\\). Det bliver transporteret fra \\(P\\) til posthuset først og derefter fra posthuset til \\(Q\\). Hvis man anvender Pythagoras to gange, kan man se, at formlen for denne afstand er: \\[\\sqrt{x_1^2+y_1^2}+\\sqrt{x_2^2+y_2^2}\\] I app’en herunder er posthusafstanden illustreret. Du kan flytte rundt på punkterne og se, hvordan afstanden ændrer sig.1 Den hedder også British Rail afstanden eller, hvis man er fransk, SNCF (Société Nationale des Chemins de fer Français) -afstanden. Man tænker sig, at man altid skal rejse via London (eller Paris) for at komme med tog fra et sted til et andet."
  },
  {
    "objectID": "feature_scaling.html",
    "href": "feature_scaling.html",
    "title": "Feature scaling",
    "section": "",
    "text": "Lad os forestille os, at data består af vægt og højde for nogle personer, så hvert datapunkt er på formen \\[(v,h)\\] hvor \\(v\\) er den pågældende persons vægt og \\(h\\) er højden. Her er det faktisk ikke klart, hvad afstanden mellem to punkter \\((v_1,h_1)\\) og \\((v_2,h_2)\\) skal være. Altså, hvornår to punkter ligger tæt på hinanden.\nEt første bud kunne være at bestemme den euklidske afstand mellem de to punkter – det der bare svarer til at bruge Pythagoras. Gør vi det får vi følgende afstandsmål mellem punkterne \\((v_1,h_1)\\) og \\((v_2,h_2)\\):\n\\[\\sqrt{(v_2-v_1)^2+(h_2-h_1)^2}\\]\nVi prøver at regne lidt på det, og forestiller os, at tre personer er givet som datapunkter i nedenstående tabel.\n\n\n\nPerson\n(vægt, højde)\n\n\n\n\nA\n\\((70 \\ kg, 165 \\ cm)\\)\n\n\nB\n\\((90 \\ kg, 180 \\ cm)\\)\n\n\nC\n\\((80 \\ kg, 190 \\ cm)\\)\n\n\n\nBruger vi Pythagoras på tallene, der står her, er:\n\\[\\begin{align*}\n&\\text{Afstanden mellem A og B: } \\sqrt{20^2+15^2}=25 \\\\\n&\\text{Afstanden mellem A og C: } \\sqrt{10^2+25^2}\\simeq 27 \\\\\n&\\text{Afstanden mellem B og C: } \\sqrt{10^2+10^2}\\simeq 14\n\\end{align*}\\]\nMed dette afstandsmål er der altså længst fra \\(A\\) til \\(C\\).\nSkifter vi nu enhed og udtrykker højden i meter får vi følgende datapunkter:\n\n\n\nPerson\n(vægt, højde)\n\n\n\n\nA\n\\((70 \\ kg, 1.65 \\ m)\\)\n\n\nB\n\\((90 \\ kg, 1.80 \\ m)\\)\n\n\nC\n\\((80 \\ kg, 1.90 \\ m)\\)\n\n\n\nNu er\n\\[\\begin{align*}\n&\\text{Afstanden mellem A og B: } \\sqrt{20^2+0.15^2} \\simeq 20 \\\\\n&\\text{Afstanden mellem A og C: } \\sqrt{10^2+0.25^2} \\simeq 10 \\\\\n&\\text{Afstanden mellem B og C: } \\sqrt{10^2+0.10^2} \\simeq 10\n\\end{align*}\\]\nDer er nu længst fra \\(A\\) til \\(B\\).\nDet er ikke ret smart. Skal man finde de datapunkter, som ligger tættest på hinanden, er svaret tilsyneladende som vinden blæser og afhængig af hvilken enhed, vi har valgt at måle i.\nMen selv hvis begge variable er i samme enhed, kan Pythagoras brugt med hovedet under armen være uheldigt, som nedenstående eksempel illustrerer.\nVi forestiller os, at vi har data for, hvor meget familierne \\(A\\), \\(B\\) og \\(C\\) bruger på bolig og på mælk om måneden. Begge variable kan være i kroner. I tabellen ses et eksempel:\n\n\n\nFamilie\n(bolig, mælk)\n\n\n\n\nA\n\\((7500 \\ kr, 200 \\ kr)\\)\n\n\nB\n\\((7500 \\ kr, 1700 \\ kr)\\)\n\n\nC\n\\((6000 \\ kr, 200 \\ kr)\\)\n\n\n\nDet vil altså for eksempel sige, at familie \\(A\\) bruger \\(7500\\) kr på bolig og \\(200\\) kr på mælk. Her er afstanden udregnet med Pythagoras:\n\\[\\begin{align*}\n&\\text{Afstanden mellem A og B: } \\sqrt{0^2+1500^2} = 1500 \\\\\n&\\text{Afstanden mellem A og C: } \\sqrt{1500^2+0^2} = 1500 \\\\\n&\\text{Afstanden mellem B og C: } \\sqrt{1500^2+1500^2} \\simeq 2121\n\\end{align*}\\]\nAltså er der samme afstand fra \\(A\\) til \\(B\\) som fra \\(A\\) til \\(C\\), men vi vil nok mene, at \\(B\\) afviger mere fra \\(A\\) end \\(C\\) gør, fordi mælkeforbruget i familie \\(B\\) er usædvanligt.\nHar vi data for mange familier, kan vi kvantificere idéen om, hvad der er usædvanligt og bruge det til at lave en mere passende afstand."
  },
  {
    "objectID": "feature_scaling.html#afstand-med-hovedet-under-armen",
    "href": "feature_scaling.html#afstand-med-hovedet-under-armen",
    "title": "Feature scaling",
    "section": "",
    "text": "Lad os forestille os, at data består af vægt og højde for nogle personer, så hvert datapunkt er på formen \\[(v,h)\\] hvor \\(v\\) er den pågældende persons vægt og \\(h\\) er højden. Her er det faktisk ikke klart, hvad afstanden mellem to punkter \\((v_1,h_1)\\) og \\((v_2,h_2)\\) skal være. Altså, hvornår to punkter ligger tæt på hinanden.\nEt første bud kunne være at bestemme den euklidske afstand mellem de to punkter – det der bare svarer til at bruge Pythagoras. Gør vi det får vi følgende afstandsmål mellem punkterne \\((v_1,h_1)\\) og \\((v_2,h_2)\\):\n\\[\\sqrt{(v_2-v_1)^2+(h_2-h_1)^2}\\]\nVi prøver at regne lidt på det, og forestiller os, at tre personer er givet som datapunkter i nedenstående tabel.\n\n\n\nPerson\n(vægt, højde)\n\n\n\n\nA\n\\((70 \\ kg, 165 \\ cm)\\)\n\n\nB\n\\((90 \\ kg, 180 \\ cm)\\)\n\n\nC\n\\((80 \\ kg, 190 \\ cm)\\)\n\n\n\nBruger vi Pythagoras på tallene, der står her, er:\n\\[\\begin{align*}\n&\\text{Afstanden mellem A og B: } \\sqrt{20^2+15^2}=25 \\\\\n&\\text{Afstanden mellem A og C: } \\sqrt{10^2+25^2}\\simeq 27 \\\\\n&\\text{Afstanden mellem B og C: } \\sqrt{10^2+10^2}\\simeq 14\n\\end{align*}\\]\nMed dette afstandsmål er der altså længst fra \\(A\\) til \\(C\\).\nSkifter vi nu enhed og udtrykker højden i meter får vi følgende datapunkter:\n\n\n\nPerson\n(vægt, højde)\n\n\n\n\nA\n\\((70 \\ kg, 1.65 \\ m)\\)\n\n\nB\n\\((90 \\ kg, 1.80 \\ m)\\)\n\n\nC\n\\((80 \\ kg, 1.90 \\ m)\\)\n\n\n\nNu er\n\\[\\begin{align*}\n&\\text{Afstanden mellem A og B: } \\sqrt{20^2+0.15^2} \\simeq 20 \\\\\n&\\text{Afstanden mellem A og C: } \\sqrt{10^2+0.25^2} \\simeq 10 \\\\\n&\\text{Afstanden mellem B og C: } \\sqrt{10^2+0.10^2} \\simeq 10\n\\end{align*}\\]\nDer er nu længst fra \\(A\\) til \\(B\\).\nDet er ikke ret smart. Skal man finde de datapunkter, som ligger tættest på hinanden, er svaret tilsyneladende som vinden blæser og afhængig af hvilken enhed, vi har valgt at måle i.\nMen selv hvis begge variable er i samme enhed, kan Pythagoras brugt med hovedet under armen være uheldigt, som nedenstående eksempel illustrerer.\nVi forestiller os, at vi har data for, hvor meget familierne \\(A\\), \\(B\\) og \\(C\\) bruger på bolig og på mælk om måneden. Begge variable kan være i kroner. I tabellen ses et eksempel:\n\n\n\nFamilie\n(bolig, mælk)\n\n\n\n\nA\n\\((7500 \\ kr, 200 \\ kr)\\)\n\n\nB\n\\((7500 \\ kr, 1700 \\ kr)\\)\n\n\nC\n\\((6000 \\ kr, 200 \\ kr)\\)\n\n\n\nDet vil altså for eksempel sige, at familie \\(A\\) bruger \\(7500\\) kr på bolig og \\(200\\) kr på mælk. Her er afstanden udregnet med Pythagoras:\n\\[\\begin{align*}\n&\\text{Afstanden mellem A og B: } \\sqrt{0^2+1500^2} = 1500 \\\\\n&\\text{Afstanden mellem A og C: } \\sqrt{1500^2+0^2} = 1500 \\\\\n&\\text{Afstanden mellem B og C: } \\sqrt{1500^2+1500^2} \\simeq 2121\n\\end{align*}\\]\nAltså er der samme afstand fra \\(A\\) til \\(B\\) som fra \\(A\\) til \\(C\\), men vi vil nok mene, at \\(B\\) afviger mere fra \\(A\\) end \\(C\\) gør, fordi mælkeforbruget i familie \\(B\\) er usædvanligt.\nHar vi data for mange familier, kan vi kvantificere idéen om, hvad der er usædvanligt og bruge det til at lave en mere passende afstand."
  },
  {
    "objectID": "feature_scaling.html#første-naive-tilgang-min-max-skalering",
    "href": "feature_scaling.html#første-naive-tilgang-min-max-skalering",
    "title": "Feature scaling",
    "section": "Første naive tilgang: Min-Max skalering",
    "text": "Første naive tilgang: Min-Max skalering\nEksemplet ovenfor illustrerer, at det nok vil være smart at prøve at inddrage i hvilket interval \\(x\\)- og \\(y\\)-værdierne varierer. For eksempel er et udsving på \\(500\\) kr i boligudgifter ikke lige så voldsomt, som et udsving på \\(500\\) kr i mælkeudgifter. Problemet er, at den absolutte forskel på henholdsvis \\(x\\)- og \\(y\\)-værdierne ikke er sammenlignelige her.\nLad os sige, at vi betragter datapunkter \\((x_i,y_i)\\) i planen, hvor \\(x\\)-værdierne ligger mellem \\(a\\) og \\(b\\), mens \\(y\\)-værdierne ligger mellem \\(c\\) og \\(d\\). Situationen er illustreret i figur 1.\n\n\n\nFigur 1: Datapunkter i planen, hvor \\(x\\)-værdierne ligger mellem \\(a\\) og \\(b\\), mens \\(y\\)-værdierne ligger mellem \\(c\\) og \\(d\\).\n\n\nIdéen er nu, at vi skalerer, så afstandene langs \\(x\\)-aksen får samme vægt som afstandene langs \\(y\\)-aksen.\nDet vil sige, at vi definerer afstanden fra \\((x_1,y_1)\\) til \\((x_2,y_2)\\) som\n\\[\\sqrt{\\left ( \\frac{x_2-x_1}{b-a} \\right )^2+ \\left ( \\frac{y_2-y_1}{d-c} \\right )^2} \\tag{1}\\]\nDet får den betydning, at hvis \\(x\\)-værdierne f.eks. kan varierer i et langt bredere interval end \\(y\\)-værdierne (dvs. at \\(b-a&gt;d-c\\)), så bliver forskellen på \\(x\\)-værdierne i ovenstående afstandsmål skaleret mere ned (fordi vi kommer til at dividere med et større tal).\nEn anden måde at forstå dette afstandsmål på, er ved at erstatte hvert punkt \\((x_i,y_i)\\) med et nyt skaleret punkt:\n\\[(x_i,y_i)_{Norm}=\\left(\\frac{x_i-a}{b-a}, \\frac{y_i-c}{d-c}\\right) \\tag{2}\\]\nResultatet af at lave denne skalering af punkterne fra figur 1 ses i figur 2.\n\n\n\nFigur 2: Datapunkterne fra figur 1, men hvor alle punkter er blevet min-max skaleret ved at bruge formlen i (2).\n\n\nBemærk, at datapunkterne nu er skaleret på en sådan måde, at alle \\(x\\)- og \\(y\\)-værdier ligger mellem \\(0\\) og \\(1\\). Derfor giver det mening, at bruge Pythagoras på disse skalerede punkter – og gør vi det, får vi\n\\[\\sqrt{\\left(\\frac{x_2-a}{b-a}-\\frac{x_1-a}{b-a}\\right)^2 +\\left(\\frac{y_2-c}{d-c}-\\frac{y_1-c}{d-c}\\right)^2}=\\sqrt{\\left(\\frac{x_2-x_1}{b-a}\\right)^2+\\left(\\frac{y_2-y_1}{d-c}\\right)^2}\\]\nBemærk, at det præcis er afstandsmålet i (1), som vi startede ud med."
  },
  {
    "objectID": "feature_scaling.html#mindre-naivt-mere-bøvlet-feature-scaling",
    "href": "feature_scaling.html#mindre-naivt-mere-bøvlet-feature-scaling",
    "title": "Feature scaling",
    "section": "Mindre naivt, mere bøvlet: Feature scaling",
    "text": "Mindre naivt, mere bøvlet: Feature scaling\nDen skalering vi har præsenteret i (2) benytter ikke som sådan information om data, men kun om den mindste og største værdi, som henholdsvis \\(x\\)- og \\(y\\)-værdierne ligger imellem (nemlig \\(a\\) og \\(b\\) for \\(x\\)-værdierne og \\(c\\) og \\(d\\) for \\(y\\)-værdierne).\nEt alternativ til dette er at bruge alle data til at bestemme skaleringen (og ikke kun den største og den mindste værdi). Dette kaldes for feature scaling, når vi arbejder med perceptroner eller neurale netværk.\nHvis de data, der skal læres fra – det vil sige træningsdata – er \\[(x_1,y_1), (x_2,y_2),\\ldots, (x_n,y_n)\\] så skalerer vi langs førsteaksen ved, at\n\nudregne et estimat for middelværdien af \\(x\\): \\[\\bar{x}=\\frac{x_1 + x_2 + \\cdots + x_n}{n}=\\frac{\\Sigma_{i=1}^nx_i}{n} \\tag{3}\\]\nog et estimat for denne variabels spredning: \\[s_x=\\sqrt{\\frac{\\Sigma_{i=1}^n(x_i-\\bar{x})^2}{n-1}} \\tag{4}\\]\n\nFeature scaling af \\(x_i\\) er da \\[\\hat{x}_i=\\frac{x_i-\\bar{x}}{s_x} \\tag{5}\\]\nTilsvarende estimeres middelværdi og spredning for \\(y\\) og feature scaling udregnes: \\[\\hat{y}_i= \\frac{y_i-\\bar{y}}{s_y} \\tag{6}\\]\nResultatet af at lave denne feature skalering af punkterne fra figur 1 ses i figur 3.\n\n\n\nFigur 3: Datapunkterne fra figur 1, men hvor alle punkter er blevet feature skaleret ved at bruge formlerne i (5) og (6).\n\n\nBemærk, hvordan de feature skalerede datapunkter har \\(x\\)- og \\(y\\)-værdier, som alle1 ligger mellem \\(-2\\) og \\(2\\).1 I virkelighedens verden kan der godt være værdier, som er mindre end \\(-2\\) eller større end \\(2\\), men som oftest vil det være sådan, at omkring \\(95 \\%\\) af værdierne vil ligge mellem \\(-2\\) og \\(2\\) efter feature skalering.\nDa alle \\(x\\)- og \\(y\\)-værdier nu er på samme skala, giver det igen mening at beregne den euklidiske afstand mellem disse nye punkter. Betragter vi de skalerede punkter \\((\\hat{x}_1,\\hat{y}_1)\\) og \\((\\hat{x}_2,\\hat{y}_2)\\) så bliver den euklidiske afstand mellem dem\n\\[\\begin{align*}\n\\sqrt{(\\hat{x}_2-\\hat{x}_1)^2+(\\hat{y}_2-\\hat{y}_1)^2} &= \\sqrt{\\left(\\frac{x_2-\\bar{x}}{s_x}-\\frac{x_1-\\bar{x}}{s_x}\\right)^2 +\\left(\\frac{y_2-\\bar{y}}{s_y}-\\frac{y_1-\\bar{y}}{s_y}\\right)^2}\\\\\n& =\\sqrt{\\left(\\frac{x_2-x_1}{s_x}\\right)^2+\\left(\\frac{y_2-y_1}{s_y}\\right)^2}\n\\end{align*}\\]\nHvis vi sammenligner med den naive tilgang i (1), er den ikke helt skæv. Der skal bare skaleres med \\(s_x\\) i stedet for \\(b-a\\) og med \\(s_y\\) i stedet for \\(c-d\\).\nBemærk, at den feature skalering, som foretages i (5) og (6), svarer til at standardisere en normalfordelt stokastisk variabel \\(X \\sim N(\\mu, \\sigma)\\):\n\\[ Z = \\frac{X-\\mu}{\\sigma}\\] Derfor vil det også være sådan, at hvis de oprindelige data er normalfordelte, så vil de nye feature skalerede data være standard normalfordelte (dvs. normalfordelte med middelværdi \\(0\\) og spredning \\(1\\)). Heraf følger også, at cirka \\(95 \\%\\) af de feature skalerede data vil ligge mellem \\(-2\\) og \\(2\\), som bemærket ovenfor."
  },
  {
    "objectID": "feature_scaling.html#eksempel-min-max-og-feature-skalering",
    "href": "feature_scaling.html#eksempel-min-max-og-feature-skalering",
    "title": "Feature scaling",
    "section": "Eksempel: Min-max og feature skalering",
    "text": "Eksempel: Min-max og feature skalering\nVi vil prøve at se på et udvidet eksempel om udgifter til bolig og mælk. Se nedenstående tabel:\n\n\n\n\n\nFamilie\n(bolig, mælk)\n\n\n\n\nA\n\\((7500 \\ kr, 200 \\ kr)\\)\n\n\nB\n\\((7500 \\ kr, 1700 \\ kr)\\)\n\n\nC\n\\((6000 \\ kr, 200 \\ kr)\\)\n\n\nD\n\\((5200 \\ kr, 300 \\ kr)\\)\n\n\nE\n\\((8100 \\ kr, 250 \\ kr)\\)\n\n\nF\n\\((6200 \\ kr, 350 \\ kr)\\)\n\n\nG\n\\((7700 \\ kr, 400 \\ kr)\\)\n\n\nH\n\\((5800 \\ kr, 350 \\ kr)\\)\n\n\nI\n\\((7200 \\ kr, 250 \\ kr)\\)\n\n\nJ\n\\((6800 \\ kr, 400 \\ kr)\\)\n\n\n\nTabel 1: Udvidet eksempel om udgifter til bolig og mælk.\nDatapunkterne fra tabellen ses indtegnet i figur 4. De tre første familier \\(A\\), \\(B\\) og \\(C\\) fra det tidligere eksempel er markeret. Bemærk, at vi tidligere har beregnet, at afstanden mellem \\(A\\) og \\(B\\) er den samme som afstanden mellem \\(A\\) og \\(C\\), hvilket også fremgår af figur 4.\n\n\n\nFigur 4: Datapunkterne fra eksemplet i tabel 1 omkring udgifter til bolig og mælk.\n\n\nVi vil nu lave både min-max skalering samt feature skalering af punkterne i tabel 1. For at lave min-max skalering får vi brug for mindste- og størsteværdi for både \\(x\\)- (bolig) og \\(y\\)-værdierne (mælk). De er: \\[\\begin{align}\na&=5200 \\quad  &\\text{og} \\quad \\quad &b=8100 \\\\\nc&=200 \\quad  &\\text{og} \\quad \\quad &d=1700 \\\\\n\\end{align}\\] Bruges disse værdier samt formlerne i (2) fås punkterne som ses i figur 5.\n\n\n\nFigur 5: Datapunkterne fra eksemplet omkring udgifter til bolig og mælk efter min-max skalering.\n\n\nLæg mærke til hvordan afstanden mellem \\(A\\) og \\(C\\) med denne skalering er blevet mindre end afstanden mellem \\(A\\) og \\(B\\), som ønsket.\nVi vil nu prøve at lave en feature skalering af punkterne i tabel 1. Vi får derfor brug for et estimat for middelværdien af henholdvis \\(x\\) og \\(y\\). De kan beregnes ved hjælp af (3) til:\n\\[\\begin{align}\n\\bar{x} &= 6800 \\\\\n\\bar{y} &= 440\n\\end{align}\\]\nBruges (4) fås et estimat for spredningen for henholdsvis \\(x\\) og \\(y\\):\n\\[\\begin{align}\n\\bar{s_x} &= 954.52 \\\\\n\\bar{s_y} &= 448.95\n\\end{align}\\]\nAnvendes formlerne i (5) og (6) til feature skalering af punkterne i tabel 1 fås punkterne, som ses i figur 6.\n\n\n\nFigur 6: Datapunkterne fra eksemplet omkring udgifter til bolig og mælk efter feature skalering.\n\n\nLæg her mærke til at afstanden mellem \\(A\\) og \\(B\\) nu er blevet endnu større end afstanden mellem \\(A\\) og \\(C\\). Det ses også, at \\(y\\)-værdien for det skalerede punkt for familie \\(B\\) er cirka \\(2.8\\). Sammenlignes dette med standard normalfordelingen, kan vi se, at der er tale om en forholdsvis ekstrem værdi2. Det vil sige, at vi ud fra de skalerede værdier kan se, at familien \\(B\\)’s mælkeforbrug på \\(1700\\) kroner rent faktisk er usædvanligt sammenlignet med de andre families mælkeforbrug.2 Husk på at for en standard normalfordelt stokastisk variabel vil omkring \\(95 \\%\\) af værdierne ligge mellem \\(-2\\) og \\(2\\)."
  },
  {
    "objectID": "afstand.html",
    "href": "afstand.html",
    "title": "Afstande, nærmest, størst, mindst",
    "section": "",
    "text": "Når vi adskiller eller samler data bygger vi på en form for afstand. De \\(k\\) nærmeste naboer er dem, der ligger tættest på i én eller anden forstand. Hvis det drejer sig om dem, hvis højder er tætte på hinanden eller måske dem, der vejer nogenlunde det samme, er det klart, hvad man mener. Der er tal, man umiddelbart kan sammenligne. Men hvad med at sammenligne både vægt og højde? Hvad betyder så mest? Er der lige langt mellem en person A, der vejer 80 kg og er 1,80 m høj og en anden, B, der vejer 90 kg og er 2,00 m eller mellem A og C, der vejer 70 kg og er 1,60 m? Det er ikke klart, selvom vi da kan plotte de tre punkter i et (vægt, højde) koordinatsystem og endda bruge Pythagoras og få den samme afstand.1 Udregner man BMI, er \\(A\\) tættere på \\(B\\) end på \\(C\\). Det kommer nok også an på, hvad vi gerne vil udtale os om: Er de nogenlunde lige gode til at løbe langt? Eller hurtigt? Mere kompliceret bliver det, hvis vi også vil inddrage øjenfarve, skostørrelse eller måske, om de køber rigtig meget mælk. Der er mange eksempler på afstande, som ikke umiddelbart er fysisk afstand. For eksempel mellem ord (LINK) eller mellem DNA (Link)"
  },
  {
    "objectID": "afstand.html#hierarkisk-clustering",
    "href": "afstand.html#hierarkisk-clustering",
    "title": "Afstande, nærmest, størst, mindst",
    "section": "Hierarkisk clustering",
    "text": "Hierarkisk clustering\nHer kender vi alle parvise afstande. Og ikke andet.\nUdfra den information laver vi et dendogram, hvor i første omgang par af datapunkter \"mødes\" i den højde, der svarer til deres afstand. Men der er mere: Hvornår skal datapunktet \\(p\\) mødes med \\(qr\\), som mødtes tidligere? Hvornår skal \\(pqr\\) mødes med \\(ab\\)? Det er linkage-reglerne.\n\nSingle linkage: \\(pqr\\) mødes med \\(ab\\) i den højde, hvor minimumsafstanden mellem de to grupper af punkter nås:\nMinimum af \\(d(a,p),d(a,q), d(a,r), d(b,p), d(b,q), d(p,r)\\)\nComplete linkage: \\(pqr\\) mødes med \\(ab\\), når den maksimale afstand mellem punkter i de to grupper er nået.\nMaksimum af \\(d(a,p),d(a,q), d(a,r), d(b,p), d(b,q), d(p,r)\\)\nMiddelafstand- average linkage: Når den gennemsnitlige afstand er nået. \\(\\frac{1}{2\\cdot 3}(d(a,p)+d(a,q)+ d(a,r)+ d(b,p)+ d(b,q)+ d(p,r))\\)\n\n(OBS: Her skal være tegninger og diagrammer -dendrogrammer. Og eksempler på, hvad forskellen er på de forskellige linkagekrav)\nKlyngeanalyse af DNA eller for eksempel mRNA giver anledning til dendrogrammer, som kaldes de phylogenetiske træer for de arter/sygdomme,... der svarer til den analyserede DNA.\nhttps://www.ncbi.nlm.nih.gov/pmc/articles/PMC2859286/\nhttps://www.ncbi.nlm.nih.gov/pmc/articles/PMC6130602/"
  },
  {
    "objectID": "afstand.html#k-means-clustering",
    "href": "afstand.html#k-means-clustering",
    "title": "Afstande, nærmest, størst, mindst",
    "section": "k-means clustering",
    "text": "k-means clustering\nVores data er punkter med \\(d\\) koordinater. Afstanden er Euklidisk. Vi vælger \\(k\\), det antal clusters, det skal ende med. Målet er at opdele data i \\(k\\) dele, \\(S_1, S_2,\\ldots , S_k\\) så den samlede gennemsnitlige kvadratiske afstand \\[\\Sigma_{i=1}^{k}\\Sigma_{p,q\\in S_i}\\frac{1}{2|S_i|}\\|p-q\\|^2\\] indenfor de \\(k\\) clusters er mindst mulig."
  },
  {
    "objectID": "afstand.html#footnotes",
    "href": "afstand.html#footnotes",
    "title": "Afstande, nærmest, størst, mindst",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nAfstanden bliver \\(10^2+0,2^2\\). Bemærk, at det er udregnet udfra vægt i kg og højde i meter. Med højde i cm ville det være \\(10^2+20^2\\), men stadig samme afstand fra A til B som fra A til C. Se Afstand udfra Data for mere info om effekten af at skifte enheder. Det kan godt lave om på, hvilke punkter, der ligger nærmest.↩︎"
  },
  {
    "objectID": "AfstandeMellemDNA.html",
    "href": "AfstandeMellemDNA.html",
    "title": "Afstand mellem DNA og RNA-strenge.",
    "section": "",
    "text": "RNA er strenge med bogstaverne U (uracil), G (guanin), C (cytosin), A, (adenin). DNA har ikke U, men i stedet T (thymin) og DNA er dobbelt. U, G, C, A og T er nukleotider.\nVi ser her på afstande mellem DNA (eller RNA) som bygger på antallet af mutationer for at nå fra den ene til den anden og desuden, hvor hyppige disse mutationer er - hvis man ved, en mutation sker ofte, er afstanden mellem en streng uden mutationen og en med mutationen ikke så lang, som hvis mutationen er meget sjælden. Udover regler for, hvilke ændringer, man tillader, giver man derfor en omkostning ved ændringen - afstanden er ikke bare antal ændringer, men summen af, hvor \"dyre\" disse ændringer er.\nAfstand mellem DNA bruges til at analysere slægtskab og hvilke dyr, herunder mennesket, der nedstammer fra hvilke - fylogenetiske træer.\nhttp://www.biotekunderviser.dk/sites/default/files/Handout Bioinformatik workshop Vejle 2.pdf\nI den sammenhæng kalder man skift mellem A og G eller mellem C og T for transitioner1 . De fire andre mulige skift: Mellem A og C, mellem A og T, mellem G og T, mellem G og C, kaldes transversioner. Transitioner er hyppigere mutationer end transversioner, så afstanden mellem \\(GATTACA\\) og \\(GATTACG\\) er mindre end mellem \\(GATTACA\\) og \\(GATTACC\\) . Den slags udskiftning af et bogstav (et basepar) kaldes en punktmutation.\nIndel mutationer er indsætning (\"In\") eller fjernelse (\"Del\" for delete\") af et eller flere basepar. Det er mindre hyppigt og svarer til længere afstand. I KILDEN OVENFOR bruges følgende omkostninger og altså afstande mellem DNA-strenge; det er et valg - der er mange andre muligheder:\n\nTransition: 1\nTransversion: 2\nGap åbning: 9 (indsæt eller fjern præcis en base - altså et bogstav.\nGap forlængelse: 4 (indsæt eller fjern en base på samme sted, som er åbnet)\n\nMan kan samle de to sidste og sige, at det koster \\(5+4L\\) at indsætte eller fjerne en delstreng med \\(L\\) bogstaver midt i et ord. (Overvej, at I forstår, det er samme regel.)\nVi tilføjer forlængelse/forkortelse: Det koster \\(4L\\) at indsætte eller fjerne \\(L\\) bogstaver i start eller slut af et ord. Alt i alt:\n\nTransition: 1\nTransversion: 2\nIndsæt eller fjern delord med \\(L\\) bogstaver midt i et ord: \\(5+4L\\)\nForlæng/forkort Indsæt eller fjern \\(L\\) bogstaver i start eller slut af et ord: \\(4L\\)\n\nAfstand mellem to strenge er så den kortest mulige måde, man kan komme fra den ene til den anden med de tilladte moves vægtet som her.\nOvervej, at samme argumenter som i Opgave [Opg:Levensh] kan vise, at vi har lavet en metrik på mængden af DNA-strenge.\nEt gratis move er at læse strengen bagfra, altså at vende den om. En DNA-streng har som udgangspunkt ikke en bestemt retning (ER DET MON RIGTIGT?)\nHer bruger vi meget korte strenge. Det er naturligvis ikke realistisk.\nVi vil finde afstanden fra \\(AGT\\) til \\(ATG\\). Der er mange muligheder for, hvordan man kan komme fra \\(AGT\\) til \\(ATG\\), altså hvordan mutationerne kunne have set ud. \\[AGT \\to ATGT \\to ATG\\] Indsæt \\(T\\) mellem \\(A\\) og \\(G\\) og fjern så det sidste \\(T\\). Det koster \\(9+4 =13\\) - længden af den vej er \\(13\\). En anden mulighed er \\[AGT\\to ATT \\to ATG\\] Der er to punktmutationer og begge er transversioner (fra \\(T\\) til \\(G\\) eller omvendt), så det koster \\(2+2=4\\). Det er faktisk den korteste vej, så afstanden er \\(4\\). At den faktisk er kortest, kræver mere eftertanke.\nHavde vi brugt samme omkostning/vægt for alle tilladte ændringer, ville begge de to veje have samme længde.\nHvad med fra \\(AGT\\) til \\(TGA\\)? Jo, det er faktisk nemmere. Det er i virkeligheden samme DNA-sekvens; man har bare læst den fra den anden ende...\nMed lange strenge, som er ens på lange stykker, finder man afstande ved først at \"aligne\" - anbringe strengene, så de passer sammen på flest mulige pladser. Og derefter udregne afstande, men det er stadig ikke nemt - der skal algoritmer til:\nStreng 1: \\(TCGTAGG\\) Streng 2: \\(TCTGTATCGA\\)\nFørste alignment: \\[\\begin{matrix}T&C&G&-&-&-&T&A&G&G\\\\T&C&T&G&T&A&T&C&G&A\\end{matrix}\\] Det koster indsættelse af \\(GTA\\), \\(5+4\\cdot 3=17\\), to transversioner \\(G\\leftrightarrow T\\) og \\(A\\leftrightarrow C\\) en transition \\(G\\leftrightarrow A\\). I alt \\(17+4+1=22\\).\nHvis man vælger alignment \\[\\begin{matrix}T&C&-&-&-&G&T&A&G&G\\\\T&C&T&G&T&A&T&C&G&A\\end{matrix}\\] er transversionen mellem \\(G\\) og \\(T\\) erstattet med en transition \\(G\\leftrightarrow A\\) og omkostningen falder med \\(1\\) til \\(21\\)\nMan indser ret let, at prisen for at klippe gør, at man ikke vil klippe to gange og bruge \\[\\begin{matrix}T&C&-&G&-&-&T&A&G&G\\\\T&C&T&G&T&A&T&C&G&A\\end{matrix}\\] hvor man kun sparer en enkelt transition, men hvad med \\[\\begin{matrix}T&C&-&G&T&A&-&-&G&G\\\\T&C&T&G&T&A&T&C&G&A\\end{matrix}\\] Her er omkostningen \\(9\\) for det første gap og \\(13\\) for det andet. Og der er en transition i sidste plads \\(G\\leftrightarrow A\\), så omkostningen er \\(23\\), men det er ikke helt så klart, at det er for dyrt at klippe to gange. I kan nok finde på eksempler, hvor det svarer sig at klippe flere steder.\n,"
  },
  {
    "objectID": "AfstandeMellemDNA.html#footnotes",
    "href": "AfstandeMellemDNA.html#footnotes",
    "title": "Afstand mellem DNA og RNA-strenge.",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nA og G er puriner, mens C og T er pyrimediner. Transition bytter en purin med en purin eller en pyrimedin med en pyrimedin.↩︎"
  },
  {
    "objectID": "MetrikDetAbstrakteAfstandsBegreb.html",
    "href": "MetrikDetAbstrakteAfstandsBegreb.html",
    "title": "Definition af en metrik- det abstrakte afstandsbegreb",
    "section": "",
    "text": "Man har ikke frit valg til at bestemme, hvad man vil bruge som afstandsmål. Hvis det skal give mening, skal man have en metrik - afstanden skal opfylde nogle betingelser:\nEn metrik på en mængde \\(M\\) er en funktion \\(d\\) fra \\(M\\times M\\) til \\(\\mathbb{R}\\) - altså en funktion, som tager to elementer i \\(M\\) og giver et reelt tal.\n\\(d\\) skal opfylde følgende for alle \\(p,q,r\\) i \\(M\\):\n\n\\(d(p,q)\\geq 0\\). Med ord: Alle afstande er positive.\n\\(d(p,p)=0\\) og \\(d(p,q)=0\\) hvis og kun hvis \\(p=q\\). Med ord: Afstanden fra et punkt til sig selv er \\(0\\) og ingen andre afstande er \\(0\\)\n\\(d(p,q)=d(q,p)\\) Afstanden er symmetrisk. Med ord: Der er lige så langt fra \\(p\\) til \\(q\\) som fra \\(q\\) til \\(p\\).\n\\(d(p,q)+d(q,r)\\geq d(p,r)\\). Trekantsuligheden. Med ord: Der er mindst lige så langt fra \\(p\\) til \\(r\\) via \\(q\\), som direkte fra \\(p\\) til \\(r\\).\n\nDet er en meget kort definition. Og meget, meget generel. \\(M\\) er en mængde - der er en strengt logisk måde at gå til mængder på, men lad os her sige en samling af objekter, som vi også kalder elementer af mængden. Læg mærke til, at vi her bare graver problemet lidt længere ned i sandet - fejer det ind under gulvtæppet - for hvad er \"objekter\"? Det kommer vi ikke nærmere her.\nDet er ret nemt at acceptere, at de tre krav er rimelige. Men er det nok? Og er det nu alligevel rimeligt? Hvad med symmetrien? Der er vel længere 10 km op ad bakke end 10 km ned ad bakke, hvis man tænker på arbejdsindsats. Så måske giver det ikke altid mening?1\nDefinitionen af metrik som her, er den, vi bruger i matematik. Den har vist sig nyttig. Der er en skov af artikler og bøger, hvor man kan se, hvad man ved, når man har en metrik. En mængde med en metrik kaldes et metrisk rum.2\nDen diskrete metrik: På en mængde \\(M\\) er funktionen \\(d\\) givet ved.\n\n\\(d(p,p)=0\\)\nHvis \\(p\\neq q\\) er \\(d(p,q)=1\\).\n\nDet er en metrik - den opfylder definitionen ovenfor. Men det er ikke nogen specielt nyttig metrik. Alle elementer ligger lige tæt på alle andre, så der er ikke ny information - udover, om to elementer er ens eller ikke.\n[Opg:Levensh] Vis, at Levenshteinafstanden giver en metrik.\n\nHvilken mængde er det mon en metrik på? Her kan man vælge - hvilke bogstaver må bruges? Vil I begrænse længden på de ord, der kan optræde?\nOvervej, at afstanden mellem to ord er længden af den (en - der kan være flere veje, som er lige lange) korteste mulige vej fra det ene til det andet i et netværk (en graf) som på FIGUREN\n\nNu skulle det være til at indse, at de fire betingelser er opfyldt.\n[ex:ikke-metrik] En elev er træt af kvadratrødder og tænker, at man vel kan lave sig en afstand i planen som følger:\n\\(D((x_1,y_1),(x_2,y_2))=(x_2-x_1)^2+(y_2-y_1)^2\\). Problem: \\(D\\) er ikke en metrik. Den opfylder ikke trekantsuligheden.\nHvordan kan man se det? Husk, at vi bare skal finde ét eksempel - tre punkter \\(p,q,r\\), hvor trekantsuligheden ikke holder. Så har vi vist, at \\(D\\) ikke er en metrik.\nEt konkret eksempel: \\(p=(0,0)\\), \\(q=(2,0)\\), \\(r=(4,0)\\). Afstand fra \\(p\\) til \\(r\\) er \\(4^2+0^2=16\\). Afstanden fra \\(p\\) til \\(q\\) er \\(2^2=4\\) og det samme gælder afstand fra \\(q\\) til \\(r\\), så \\(D(p,q)+D(q,r)=8\\), mens \\(D(p,r)=16\\).\nEt andet eksempel, som ligner en rigtig trekant: \\(p=(0,0)\\) \\(q=(2,1)\\), \\(r=(4,0)\\). Her er \\(D(p,q)=2^2+1^2=5\\) og \\(D(q,r)=(4-2)^2+1^2=5\\), så \\(D(p,q)+D(q,r)=10\\), mens \\(D(p,r)=16\\). Der er kortere at gå fra \\(p\\) til \\(r\\) via \\(q\\) end at gå direkte.\nBrug \\(D(p,q)\\) fra Eksempel [ex:ikke-metrik]. Her regner vi på trekanter, hvor midterpunktet \\(q\\) flyttes længere væk fra førsteaksen: \\(p=(0,0)\\) \\(q=(2,y)\\), \\(r=(4,0)\\). Udregn \\(D(p,q)+D(q,r)\\) og find det \\(y\\), hvor \\(D(p,q)+D(q,r)=D(p,r)\\). Hvad er vinklen \\(pqr\\), når den ligning er opfyldt? Kunne man have indset det uden at regne?"
  },
  {
    "objectID": "MetrikDetAbstrakteAfstandsBegreb.html#footnotes",
    "href": "MetrikDetAbstrakteAfstandsBegreb.html#footnotes",
    "title": "Definition af en metrik- det abstrakte afstandsbegreb",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nHvis funktionen \\(d\\) opfylder 1,2,4, er det en quasimetrik. Opfylder den 1,2,3, er det en semimetrik. Opfylder den 1, 3 og 4, og første del af 2 (\\(d(p,p)=0\\), men der kan være andre afstande, der er \\(0\\)) er det en pseudometrik. Der findes såmænd også præmetrikker, metametrikker, pseudoquasimetrikker og sikkert andre - \"falske metrikker\".↩︎\nOrdet \"rum\" skal man ikke lægge for meget i. Det er ikke anden information i det end definitionen. Intution skal man være varsom med.↩︎"
  }
]